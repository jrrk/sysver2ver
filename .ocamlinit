#directory "/home/jrrk2/.opam/system/lib/xml-light";;
#print_depth 10000;;
#print_length 100000;;

open Vxml

(*
let xmlf = "../picorv32/xml_verilator_dir/Vpicorv32_wrapper.xml";;
let xmlf = "/local/scratch/jrrk2/ariane-vcs-regression/ariane/obj_dir/Vdmi_jtag.xml";;
let xmlf = "/local/scratch/jrrk2/ariane-vcs-regression/ariane/work-xml/Variane_testharness.xml";;
let xmlf = "obj_dir/Vjtag_xilinx_fixed.xml";;
let xmlf = "obj_dir/Vdmi_testharness_0.xml";;
let xmlf = "obj_dir/Vblif01g.xml";;
let xmlf = "obj_dir/Vonehot16.xml";;
let xmlf = "obj_dir/Vinterface_test.xml";;
let xmlf = "obj_dir/Vsimple.xml";;
let xmlf = "obj_dir/Vchip.xml";;
let xmlf = "obj_dir/Vmaster_opt.xml";;
let xmlf = "obj_dir/Varray2d.xml";;
let xmlf = "obj_dir/Vmaster.xml";;
let xmlf = "obj_dir/Vpicorv32_ref.xml";;
let xmlf = "obj_dir/Vpicorv32_pcpi_mul.xml";;
let xmlf = "obj_dir/Vreduceor.xml";;
let xmlf = "obj_dir/Vreset_transform.xml";;
let xmlf = "obj_dir/Vaccum.xml";;
let xmlf = "obj_dir/Vdecoder.xml";;
let xmlf = "obj_dir/Valways_test.xml";;
let xmlf = "obj_dir/Vtilde.xml";;
let xmlf = "obj_dir/Vtestbench_golden.xml";;
let xmlf = "obj_dir/Vpicorv32_wrapper.xml";;
let xmlf = "../ariane/obj_dir/Vstore_buffer.xml";;
let xmlf = "../ariane/obj_dir/Vamo_alu.xml";;
let xmlf = "../ariane/obj_dir/Vmiss_handler.xml";;
let xmlf = "../ariane/obj_dir/Vbtb.xml";;
let xmlf = "../ariane/obj_dir/Vstd_icache.xml";;
let xmlf = "obj_dir/Vbigint.xml";;
let xmlf = "obj_dir/Vdebug_rom.xml";;
let xmlf = "obj_dir/Vcaseinside.xml";;
let xmlf = "../ariane/obj_dir/Vdm_top.xml";;
let xmlf = "obj_dir/Vaxi_slave_connect_example.xml";;
let xmlf = "obj_dir/Vinterface_array.xml";;
let xmlf = "obj_dir/Vsimple.xml";;
let xmlf = "obj_dir/Vinterface1.xml";;
let xmlf = "vout/Vinterface1.xml";;
let xmlf = "obj_dir/Vsys.xml";;
let xmlf = "obj_dir/Vgenvarexample.xml";;
let xmlf = "../ariane/obj_dir/Vbug1.xml";;
let xmlf = "../ariane/obj_dir/Vbug3.xml";;
let xmlf = "obj_dir/Vunpacked.xml";;
let xmlf = "obj_dir/Vaxi4_memory.xml";;
let xmlf = "obj_dir/Vinitreg.xml";;
let xmlf = "obj_dir/Vunpacked.xml";;
let xmlf = "../ariane/obj_dir/Valu.xml";;
let xmlf = "obj_dir/Vforstmt.xml";;
let xmlf = "obj_dir/Vextend.xml";;
*)

let xmlf = "../ariane/obj_dir/Variane_testharness.xml";;

let errlst = ref [];;
let (line,range,rwxml,xml,mods,toplst,topattr) = Vxml.translate errlst xmlf;;

let f k = Hashtbl.find Vxml.modules_opt k;;
let p k = Hashtbl.find Vxml.packages k;;
let d f = Vxml.debug f (Hashtbl.find Vxml.modules_opt f)
let h k = Hashtbl.find Vxml.hierarchy k;;

let othcnt = (
List.length !exprothlst,
List.length !stmtothlst,
List.length !portothlst,
List.length !iothlst,
List.length !csothlst,
List.length !bgnothlst,
List.length !itmothlst,
List.length !catothlst,
List.length !cellothlst,
List.length !posneglst,
List.length !typothlst,
List.length !memothlst
);;

let oldmod = ref [];;
Hashtbl.iter (fun k _ -> oldmod := k :: !oldmod) Vxml.modules;;
let oldmod = !oldmod;;

(*
let (x,modul) = Hashtbl.find modules "plic_find_max";;
let wlst = ref [];;
List.iter (fun (id, (origin, typ', kind', n)) -> wlst := (id,typ',findmembers' typ') :: !wlst)  !(modul.v);;
wlst;;
*)

